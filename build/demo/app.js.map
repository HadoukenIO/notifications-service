{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/client/index.ts","webpack:///./src/client/version.ts","webpack:///./src/demo/app.ts","webpack:///./src/shared/config.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/demo/app.ts\");\n","console.log('Client index.js loaded');\n\nimport {CHANNEL_NAME} from '../shared/config';\n\nimport {OptionButton} from '../shared/Models/OptionButton';\nimport {Notification} from '../shared/Models/Notification';\nimport {ISenderInfo} from '../provider/Models/ISenderInfo';\nimport {OptionInput} from '../shared/Models/OptionInput';\nimport {NotificationEvent} from '../shared/Models/NotificationEvent';\nimport {NotificationOptions} from './Models/NotificationOptions';\n\nimport {version} from './version';\n\nconst IDENTITY = {\n    uuid: 'notifications-service',\n    name: 'Notifications-Service',\n    channelName: 'notifications-service'\n};\n\n// For testing/display purposes\nconst notificationClicked = (payload: NotificationEvent, sender: ISenderInfo) => {\n    console.log('notificationClicked hit');\n    console.log('payload', payload);\n    console.log('sender', sender);\n    return 'notificationClicked success';\n};\n\n// For testing/display purposes\nconst notificationButtonClicked = (payload: NotificationEvent&ISenderInfo&{buttonIndex: number}, sender: ISenderInfo) => {\n    console.log('notificationButtonClicked hit');\n    console.log('payload', payload);\n    console.log('sender', sender);\n    return 'notificationClicked success';\n};\n\n// For testing/display purposes\nconst notificationClosed = (payload: NotificationEvent&ISenderInfo, sender: ISenderInfo) => {\n    console.log('notificationClosed hit');\n    console.log('payload', payload);\n    console.log('sender', sender);\n    return 'notificationClosed success';\n};\n\nconst callbacks = {\n    notificationClicked,\n    notificationButtonClicked,\n    notificationClosed\n};\n\nasync function createClientPromise() {\n    await new Promise((resolve, reject) => {\n        if (!fin) {\n            reject('fin is not defined, This module is only intended for use in an OpenFin application.');\n        }\n        fin.desktop.main(() => resolve());\n    });\n\n    try {\n        const opts = {payload: {version}};\n        const clientP = fin.InterApplicationBus.Channel.connect(CHANNEL_NAME, opts).then((client) => {\n            // tslint:disable-next-line:no-any\n            client.register('WARN', (payload: any) => console.warn(payload));\n            client.register('notification-clicked', (payload: NotificationEvent&ISenderInfo, sender: ISenderInfo) => {\n                callbacks.notificationClicked(payload, sender);\n            });\n            client.register('notification-button-clicked', (payload: NotificationEvent&ISenderInfo&{buttonIndex: number}, sender: ISenderInfo) => {\n                callbacks.notificationButtonClicked(payload, sender);\n            });\n            client.register('notification-closed', (payload: NotificationEvent&ISenderInfo, sender: ISenderInfo) => {\n                callbacks.notificationClosed(payload, sender);\n            });\n            return client;\n        });\n        return clientP;\n    } catch (e) {\n        console.error(e);\n        return null;\n    }\n}\n\nconst clientP = createClientPromise();\n\n/**\n * @method create Creates a new notification\n * @param {string} id The id of the notification\n * @param {NotificationOptions} options notification options\n */\nexport async function create(id: string, options: NotificationOptions) {\n    const plugin = await clientP;\n    const payload: Notification = Object.assign({}, {id}, options);\n    const notification = await plugin.dispatch('create-notification', payload);\n    return notification;\n}\n\n/**\n * @method getAll get all notifications for this app\n */\nexport async function getAll() {\n    const plugin = await clientP;\n    const appNotifications = await plugin.dispatch('fetch-app-notifications', {});\n    return appNotifications;\n}\n\n/**\n * @method clear clears a notification by it's ID\n * @param {string} id The id of the notification\n */\nexport async function clear(id: string) {\n    const plugin = await clientP;\n    const payload = {id};\n    const result = await plugin.dispatch('clear-notification', payload);\n    return result;\n}\n\n/**\n * @method clearAll clears all notifications for an app\n */\nexport async function clearAll() {\n    const plugin = await clientP;\n    const result = await plugin.dispatch('clear-app-notifications');\n    return result;\n}\n\n/**\n * @method clearAll clears all notifications for an app\n * @param {string} evt the event name\n * @param {(payload: NotificationEvent, sender: ISenderInfo) => string)} cb event handler callback\n */\nexport async function addEventListener(evt: string, cb: (payload: NotificationEvent, sender: ISenderInfo) => string) {\n    if (evt === 'click') {\n        callbacks.notificationClicked = cb;\n    } else if (evt === 'close') {\n        callbacks.notificationClosed = cb;\n    } else if (evt === 'button-click') {\n        callbacks.notificationButtonClicked = cb;\n    }\n}\n","// generated by genversion\nexport const version = '0.9.6';\n","import * as ofnotes from '../client/index';\nimport {NotificationOptions} from '../client/Models/NotificationOptions';\nimport {ISenderInfo} from '../provider/Models/ISenderInfo';\nimport {NotificationEvent} from '../shared/Models/NotificationEvent';\n\nfunction makeNote(id: string, opts: NotificationOptions) {\n    return ofnotes.create(id, Object.assign(opts, {date: Date.now()}));\n}\n\nfunction clearNote(id: string) {\n    return ofnotes.clear(id);\n}\n\nfunction getNotes() {\n    return ofnotes.getAll();\n}\n\nconst normalNote: NotificationOptions = {\n    body: 'Notification Body',\n    title: 'Notification Title ',\n    subtitle: 'testSubtitle',\n    icon: 'favicon.ico',\n    context: {testContext: 'testContext'},\n    date: new Date(),\n    buttons: [],\n    inputs: []\n};\n\nconst buttonNote: NotificationOptions = {\n    body: 'Notification Body',\n    title: 'Notification Title ',\n    subtitle: 'testSubtitle',\n    icon: 'favicon.ico',\n    context: {testContext: 'testContext'},\n    date: new Date(),\n    buttons: [{title: 'test1', icon: 'favicon.ico'}, {title: 'test2', icon: 'favicon.ico'}],\n    inputs: []\n};\n\nfunction makeNoteOfType(index: number) {\n    if (index % 2 === 1) {\n        return makeNote(`1q2w3e4r${index}`, normalNote);\n    } else {\n        return makeNote(`1q2w3e4r${index}`, buttonNote);\n    }\n}\n\n// document.addEventListener(\"DOMContentLoaded\", function (event) {\n//     for (let index = 1; index < 7; index++) {\n//         document.getElementById(`button${index}`).addEventListener('click',\n//         () => {\n//             makeNoteOfType(index)\n//                 .then((notification) => {\n//                     if (!notification.success) {\n//                         //\n//                         document.getElementById('clientResponse').innerHTML =\n//                         `\n//                         //             Notification ids must be unique! This\n//                         id already exists!\n//                         //         `\n//                         logit(`Notification ids must be unique! This id\n//                         already exists!`);\n//                     }\n//                 })\n//         });\n\n//         document.getElementById(`clearbutton${index}`).addEventListener('click',\n//         () => {\n//             clearNote(`1q2w3e4r${index}`)\n//         });\n//     }\n\n//     document.getElementById(`fetchAppNotifications`).addEventListener('click',\n//     () => {\n//         getNotes()\n//             .then((notifications) => {\n//                 // document.getElementById('clientResponse').innerHTML = `\n//                 //     ${notifications.value.length} notifications received\n//                 from the Notification Center!\n//                 // `\n//                 logit(`${notifications.value.length} notifications received\n//                 from the Notification Center`);\n//             })\n//     });\n// });\n\nfin.desktop.main(async () => {\n    const clientResponse = document.getElementById('clientResponse');\n\n\n    function logit(msg: string) {\n        const logEntry = document.createElement('div');\n        logEntry.innerHTML = msg;\n        clientResponse.insertBefore(logEntry, clientResponse.firstChild);\n    }\n\n    for (let index = 1; index < 7; index++) {\n        document.getElementById(`button${index}`).addEventListener('click', () => {\n            makeNoteOfType(index).then((notification) => {\n                if (!notification.success) {\n                    // document.getElementById('clientResponse').innerHTML = `\n                    //             Notification ids must be unique! This id already\n                    //             exists!\n                    //         `\n                    logit(`Notification ids must be unique! This id already exists!`);\n                }\n            });\n        });\n\n        document.getElementById(`clearbutton${index}`).addEventListener('click', () => {\n            clearNote(`1q2w3e4r${index}`);\n        });\n    }\n\n    document.getElementById(`fetchAppNotifications`).addEventListener('click', () => {\n        getNotes().then((notifications) => {\n            // document.getElementById('clientResponse').innerHTML = `\n            //     ${notifications.value.length} notifications received from the\n            //     Notification Center!\n            // `\n            logit(`${notifications.value.length} notifications received from the Notification Center`);\n        });\n    });\n\n    ofnotes.addEventListener('click', (payload: NotificationEvent, sender: ISenderInfo) => {\n        // document.getElementById('clientResponse').innerHTML = `CLICK action\n        // received from notification ${payload.id}`\n        logit(`CLICK action received from notification ${payload.id}`);\n        return '';\n    });\n\n    ofnotes.addEventListener('close', (payload: NotificationEvent, sender: ISenderInfo) => {\n        // document.getElementById('clientResponse').innerHTML = `CLOSE action\n        // received from notification ${payload.id}`\n        logit(`CLOSE action received from notification ${payload.id}`);\n        return '';\n    });\n    ofnotes.addEventListener('button-click', (payload: NotificationEvent, sender: ISenderInfo) => {\n        const buttonClicked = payload.buttons[payload.buttonIndex];\n        console.log(buttonClicked);\n        const buttonTitle = buttonClicked.title;\n        // document.getElementById('clientResponse').innerHTML = `Button Click\n        // on ${buttonTitle} action received from notification ${payload.id}`\n        logit(`BUTTON CLICK on ${buttonTitle} from notification ${payload.id}`);\n        return '';\n    });\n});","export const CHANNEL_NAME = 'of-notifications-service-v1';"],"sourceRoot":""}